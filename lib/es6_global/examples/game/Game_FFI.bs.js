// Generated by BUCKLESCRIPT VERSION 4.0.5, PLEASE EDIT WITH CARE

import * as $$Map from "../../../../node_modules/bs-platform/lib/es6/map.js";
import * as Block from "../../../../node_modules/bs-platform/lib/es6/block.js";
import * as Curry from "../../../../node_modules/bs-platform/lib/es6/curry.js";
import * as Printf from "../../../../node_modules/bs-platform/lib/es6/printf.js";
import * as $$String from "../../../../node_modules/bs-platform/lib/es6/string.js";

function kind() {
  return /* Click */0;
}

function toString(param) {
  if (param) {
    return "mousemove";
  } else {
    return "click";
  }
}

function compare(a, b) {
  return $$String.compare(a ? "mousemove" : "click", b ? "mousemove" : "click");
}

var $$Map$1 = $$Map.Make(/* module */[/* compare */compare]);

var Event = /* module */[
  /* kind */kind,
  /* toString */toString,
  /* Map */$$Map$1
];

function elementById(prim) {
  return document.getElementById(prim);
}

function on($$event, handler, node) {
  node.addEventListener($$event ? "mousemove" : "click", handler);
  return node;
}

function off($$event, handler, node) {
  node.removeEventListener($$event ? "mousemove" : "click", handler);
  return node;
}

var DOM = /* module */[
  /* elementById */elementById,
  /* on */on,
  /* off */off
];

function get2dContext(node) {
  return node.getContext("2d");
}

function colorToString(param) {
  switch (param.tag | 0) {
    case 0 : 
        var hex = Curry._1(Printf.sprintf(/* Format */[
                  /* Int */Block.__(4, [
                      /* Int_X */8,
                      /* No_padding */0,
                      /* No_precision */0,
                      /* End_of_format */0
                    ]),
                  "%X"
                ]), param[0]);
        return "#" + (String(hex) + "");
    case 1 : 
        return "rgb(" + (String(param[0]) + (", " + (String(param[1]) + (", " + (String(param[2]) + ")")))));
    case 2 : 
        return "rgb(" + (String(param[0]) + (", " + (String(param[1]) + (", " + (String(param[2]) + (", " + (String(param[3]) + ")")))))));
    
  }
}

function fillRect(canvas, param, color) {
  canvas.fillStyle = colorToString(color);
  canvas.fillRect(param[0], param[1], param[2], param[3]);
  return canvas;
}

var Canvas = /* module */[
  /* get2dContext */get2dContext,
  /* colorToString */colorToString,
  /* fillRect */fillRect
];

export {
  Event ,
  DOM ,
  Canvas ,
  
}
/* Map Not a pure module */
