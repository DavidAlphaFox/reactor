// Generated by BUCKLESCRIPT VERSION 4.0.5, PLEASE EDIT WITH CARE

import * as List from "../../../node_modules/bs-platform/lib/es6/list.js";
import * as FFI_WebWorker$Reactor from "./FFI_WebWorker.bs.js";
import * as ReActor_Utils$Reactor from "./ReActor_Utils.bs.js";
import * as ReActor_Process$Reactor from "./ReActor_Process.bs.js";

function leastBusy(workers) {
  return List.nth(workers, 0);
}

function make_workerThread() {
  return FFI_WebWorker$Reactor.make("/lib/es6_global/src/ReActor_WebWorker.bs.js", /* ModuleWorker */0);
}

function make() {
  return /* record */[
          /* id */ReActor_Utils$Reactor.Random[/* asHex */2](ReActor_Utils$Reactor.Random[/* random */1](7), 7),
          /* proc_count */0
        ];
}

function send(msg, worker) {
  if (msg) {
    var pid = ReActor_Process$Reactor.pid(0, worker[0][/* proc_count */1], 0);
    console.log(" Created Process(" + (String(pid) + ") "));
    return /* () */0;
  } else {
    console.log(worker[0]);
    return /* () */0;
  }
}

export {
  leastBusy ,
  make_workerThread ,
  make ,
  send ,
  
}
/* No side effect */
