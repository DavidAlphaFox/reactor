// Generated by BUCKLESCRIPT VERSION 4.0.7, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var ReActor = require("../../src/ReActor.bs.js");
var Js_primitive = require("bs-platform/lib/js/js_primitive.js");
var ReActor_Utils = require("../../src/ReActor_Utils.bs.js");
var Caml_exceptions = require("bs-platform/lib/js/caml_exceptions.js");
var ReActor_Runtime = require("../../src/ReActor_Runtime.bs.js");

var Log = Caml_exceptions.create("E2_SimpleMessagePassing.Log");

function logger_f(env, prefix) {
  var match = Curry._1(env[/* recv */1], /* () */0);
  if (match !== undefined) {
    var m = Js_primitive.valFromOption(match);
    var now = ReActor_Utils.$$Date[/* now */0](/* () */0);
    if (m[0] === Log) {
      console.log("" + (String(prefix) + (" - " + (String(now) + (" - " + (String(m[1]) + ""))))));
    }
    
  }
  return /* Become */Block.__(0, [prefix]);
}

var logger = ReActor.register("logger", ReActor.spawn(logger_f, "Default =>"));

console.log("What!");

ReActor_Runtime.defer((function (param) {
        return ReActor.send(logger, [
                    Log,
                    1
                  ]);
      }), 0);

ReActor_Runtime.defer((function (param) {
        return ReActor.send(logger, [
                    Log,
                    2
                  ]);
      }), 500);

ReActor_Runtime.defer((function (param) {
        return ReActor.send(logger, [
                    Log,
                    3
                  ]);
      }), 1000);

ReActor_Runtime.defer((function (param) {
        return ReActor.send(logger, [
                    Log,
                    4
                  ]);
      }), 3000);

exports.Log = Log;
exports.logger_f = logger_f;
exports.logger = logger;
/* logger Not a pure module */
